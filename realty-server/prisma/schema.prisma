// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id Int @default(autoincrement()) @id
  email String  @unique
  first_name  String
  last_name String?
  password String?
  address String
  phone String
  roleId Int
  role UserRoles @relation(fields: [roleId], references: [id])
  properties Properties[]
  appointmentClient Appointments[] @relation("client")
  appointmentAgent Appointments[] @relation("agent")
}

model UserRoles {
  id Int @default(autoincrement()) @id
  description String
  users Users[]
}

model Properties {
  id Int @default(autoincrement()) @id
  agentId Int?
  description String
  area Int
  price Decimal
  latitude Decimal
  longitude Decimal
  address String
  mis_number Int
  zipCode Int
  baths Int
  bedrooms Int
  propertyType Int
  countyId Int
  provinceId Int
  cityId Int
  neighbourhoodId Int
  agent Users? @relation(fields: [agentId], references: [id])
  type PropertyTypes @relation(fields: [propertyType], references: [id])
  county Counties @relation(fields: [countyId], references: [id])
  province Provinces @relation(fields: [provinceId], references: [id])
  city Cities @relation(fields: [cityId], references: [id])
  neighbourhood Neighbourhoods @relation(fields: [neighbourhoodId], references: [id])
  appointment Appointments[]
  propertyImages PropertyImages[]
}

model PropertyTypes {
  id Int @default(autoincrement()) @id
  parentId Int?
  description String
  parent PropertyTypes? @relation("types", fields: [parentId], references: [id])
  property Properties[]
  childs PropertyTypes[] @relation("types")
}

model PropertyImages {
  id Int @default(autoincrement()) @id
  propertyId Int
  name String
  url String
  property Properties @relation(fields: [propertyId], references: [id])
}

model Provinces {
  id Int @default(autoincrement()) @id
  name String
  abbreviation String @unique
  counties Counties[]
  properties Properties[]
}

model Counties {
  id Int @default(autoincrement()) @id
  name String
  fipscode String @unique
  stateAbbreviation String
  province Provinces @relation(fields: [stateAbbreviation], references: [abbreviation])
  cities Cities[]
  neighbourhoods Neighbourhoods[]
  properties Properties[]
}

model Cities {
  id Int @id
  name String
  countyFips String
  stateAbbreviation String
  county Counties @relation(fields: [countyFips], references: [fipscode])
  neighbourhood Neighbourhoods[]
  properties Properties[]
}

model Neighbourhoods {
  id Int @default(autoincrement()) @id
  name String
  cityId Int
  countyFips String
  stateAbbreviation String
  city Cities @relation(fields: [cityId], references: [id])
  county Counties @relation(fields: [countyFips], references: [fipscode])
  properties Properties[]
}

model Appointments {
  id Int @default(autoincrement()) @id
  clientId Int
  agentId Int
  propertyId Int
  date DateTime
  comment String
  email String?
  phone String?
  client Users @relation("client", fields: [agentId], references: [id])
  agent Users @relation("agent", fields: [clientId], references: [id])
  property Properties @relation(fields: [propertyId], references: [id])
}